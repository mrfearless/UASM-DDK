;==============================================================================
; UASM-DDK - ntdef.inc
; 
; www.github.com/mrfearless/UASM-DDK by fearless
; 
;==============================================================================

ifndef _NTDEF_
  _NTDEF_ equ <>

    TRUE		equ 1
    FALSE		equ 0
    NULL		equ 0

  RESTRICTED_POINTER equ <>
  ALIGNMENT_MACHINE equ <>
  UNALIGNED equ <__unaligned>
  UNALIGNED64 equ <__unaligned>
  MAX_NATURAL_ALIGNMENT equ <sizeof ( ULONGLONG )>
  MEMORY_ALLOCATION_ALIGNMENT equ 16
  SYSTEM_CACHE_ALIGNMENT_SIZE equ 64

  PVOID typedef ptr QWORD
  PVOID64 typedef ptr QWORD
  POINTER typedef ptr QWORD
  POINTER_64 typedef ptr QWORD

  VOID equ <void>
  CHAR typedef SBYTE
  SHORT_ typedef SWORD
  LONG typedef SDWORD
  INT8 typedef SBYTE
  UINT8 typedef BYTE
  PUINT8 typedef QWORD
  INT_ typedef DWORD
  INT16 typedef SWORD
  UINT16 typedef WORD
  PUINT16 typedef QWORD
  INT32 typedef SDWORD
  UINT32 typedef DWORD
  INT64 typedef SQWORD
  UINT64 typedef QWORD
  WCHAR typedef WORD
  PWCHAR typedef ptr WCHAR
  LPWCH typedef ptr WCHAR
  PWCH typedef ptr WCHAR
  LPCWCH typedef ptr WCHAR
  PCWCH typedef ptr WCHAR
  NWPSTR typedef ptr WCHAR
  LPWSTR typedef ptr WCHAR
  PWSTR typedef ptr WCHAR
  PZPWSTR typedef ptr PWSTR
  PCZPWSTR typedef ptr PWSTR
  LPUWSTR typedef ptr WCHAR
  PUWSTR typedef ptr WCHAR
  LPCWSTR typedef ptr WCHAR
  PCWSTR typedef ptr WCHAR
  PZPCWSTR typedef ptr PCWSTR
  PCZPCWSTR typedef ptr PCWSTR
  LPCUWSTR typedef ptr WCHAR
  PCUWSTR typedef ptr WCHAR
  PZZWSTR typedef ptr WCHAR
  PCZZWSTR typedef ptr WCHAR
  PUZZWSTR typedef ptr WCHAR
  PCUZZWSTR typedef ptr WCHAR
  PNZWCH typedef ptr WCHAR
  PCNZWCH typedef ptr WCHAR
  PUNZWCH typedef ptr WCHAR
  PCUNZWCH typedef ptr WCHAR

  LPCWCHAR typedef ptr WCHAR
  PCWCHAR typedef ptr WCHAR
  LPCUWCHAR typedef ptr WCHAR
  PCUWCHAR typedef ptr WCHAR
  UCSCHAR typedef DWORD
  UCSCHAR_INVALID_CHARACTER equ 0ffffffffh
  MIN_UCSCHAR equ 0
  MAX_UCSCHAR equ 0010FFFFh
  PUCSCHAR typedef ptr UCSCHAR
  PCUCSCHAR typedef ptr UCSCHAR
  PUCSSTR typedef ptr UCSCHAR
  PUUCSSTR typedef ptr UCSCHAR
  PCUCSSTR typedef ptr UCSCHAR
  PCUUCSSTR typedef ptr UCSCHAR
  PUUCSCHAR typedef ptr UCSCHAR
  PCUUCSCHAR typedef ptr UCSCHAR

  ;UCHAR typedef ptr CHAR
  PCHAR typedef ptr CHAR
  LPCH typedef ptr CHAR
  PCH typedef ptr CHAR
  LPCCH typedef ptr CHAR
  PCCH typedef ptr CHAR
  NPSTR typedef ptr CHAR
  LPSTR typedef ptr CHAR
  PSTR typedef ptr CHAR
  PZPSTR typedef ptr PSTR
  PCZPSTR typedef ptr PSTR
  LPCSTR typedef ptr CHAR
  PCSTR typedef ptr CHAR
  PZPCSTR typedef ptr PCSTR
  PCZPCSTR typedef ptr PCSTR
  PZZSTR typedef ptr CHAR
  PCZZSTR typedef ptr CHAR
  PNZCH typedef ptr CHAR
  PCNZCH typedef ptr CHAR
  ifdef UNICODE
    ifndef _TCHAR_DEFINED
      TCHAR typedef WCHAR
      PTCHAR typedef ptr WCHAR
      TUCHAR typedef WCHAR
      PTUCHAR typedef ptr WCHAR
      _TCHAR_DEFINED equ <>
    endif
    LPTCH typedef LPWCH
    PTCH typedef LPWCH
    LPCTCH typedef LPCWCH
    PCTCH typedef LPCWCH
    PTSTR typedef LPWSTR
    LPTSTR typedef LPWSTR
    PCTSTR typedef LPWSTR
    LPCTSTR typedef LPWSTR
    PUTSTR typedef LPUWSTR
    LPUTSTR typedef LPUWSTR
    PCUTSTR typedef LPCUWSTR
    LPCUTSTR typedef LPCUWSTR
    LP typedef LPWSTR
    PZZTSTR typedef PZZWSTR
    PCZZTSTR typedef PCZZWSTR
    PUZZTSTR typedef PUZZWSTR
    PCUZZTSTR typedef PCUZZWSTR
    PZPTSTR typedef PZPWSTR
    PNZTCH typedef PNZWCH
    PCNZTCH typedef PCNZWCH
    PUNZTCH typedef PUNZWCH
    PCUNZTCH typedef PCUNZWCH
    __TEXT macro quote
     exitm <L ## quote >
    endm
  else
    ifndef _TCHAR_DEFINED
      TCHAR typedef SBYTE
      PTCHAR typedef ptr SBYTE
      TUCHAR typedef BYTE
      PTUCHAR typedef ptr BYTE
      _TCHAR_DEFINED equ <>
    endif
    LPTCH typedef LPCH
    PTCH typedef LPCH
    LPCTCH typedef LPCCH
    PCTCH typedef LPCCH
    PTSTR typedef LPSTR
    LPTSTR typedef LPSTR
    PUTSTR typedef LPSTR
    LPUTSTR typedef LPSTR
    PCTSTR typedef LPSTR
    LPCTSTR typedef LPSTR
    PCUTSTR typedef LPSTR
    LPCUTSTR typedef LPSTR
    PZZTSTR typedef PZZSTR
    PUZZTSTR typedef PZZSTR
    PCZZTSTR typedef PCZZSTR
    PCUZZTSTR typedef PCZZSTR
    PZPTSTR typedef PZPSTR
    PNZTCH typedef PNZCH
    PUNZTCH typedef PNZCH
    PCNZTCH typedef PCNZCH
    PCUNZTCH typedef PCNZCH
    __TEXT macro quote
     exitm <quote >
    endm
  endif
  TEXT macro quote
   exitm <__TEXT ( quote ) >
  endm
  DOUBLE typedef REAL8
  QUAD struct
    union DUMMYUNIONNAME_0
      UseThisFieldToCopy QWORD ?
      DoNotUseThisField REAL8 ?
    ends
  QUAD ends

  PSHORT typedef ptr SWORD
  PLONG typedef ptr SDWORD
  PQUAD typedef ptr QUAD
  BASETYPES equ <>
  UCHAR typedef BYTE
  USHORT typedef WORD
  ULONG typedef DWORD
  ULONG32 typedef DWORD
  PULONG64 typedef QWORD
  UQUAD typedef QUAD
  PUCHAR typedef ptr BYTE
  PUSHORT typedef ptr WORD
  PULONG typedef ptr DWORD
  PUQUAD typedef ptr UQUAD

  PCUCHAR typedef ptr BYTE
  PCUSHORT typedef ptr WORD
  PCULONG typedef ptr DWORD
  PCUQUAD typedef ptr UQUAD

  SCHAR typedef SBYTE
  PSCHAR typedef ptr SCHAR
  PCSCHAR typedef ptr SCHAR

  ALL_PROCESSOR_GROUPS equ 0ffffh
  PROCESSOR_NUMBER struct
    Group_ WORD ?
    Number BYTE ?
    Reserved BYTE ?
  PROCESSOR_NUMBER ends

  PPROCESSOR_NUMBER typedef ptr PROCESSOR_NUMBER
  
  IFDEF _WIN64
  KAFFINITY typedef	QWORD
  ELSE
  KAFFINITY typedef	DWORD
  ENDIF
  
  GROUP_AFFINITY struct
    Mask__ KAFFINITY ?
    Group_ WORD ?
    Reserved WORD 3 dup (?)
  GROUP_AFFINITY ends

  PGROUP_AFFINITY typedef ptr GROUP_AFFINITY
  
  IFDEF _WIN64
    MAXIMUM_PROC_PER_GROUP equ 64
  else
    MAXIMUM_PROC_PER_GROUP equ 32
  endif
  MAXIMUM_PROCESSORS equ <MAXIMUM_PROC_PER_GROUP>
  HANDLE typedef ptr 
  PHANDLE typedef ptr HANDLE
  FCHAR typedef BYTE
  FSHORT typedef WORD
  FLONG typedef DWORD
  ifndef _HRESULT_DEFINED
    _HRESULT_DEFINED equ <>
    HRESULT typedef SDWORD
  endif


  OBJ_HANDLE_TAGBITS equ 00000003h
  CCHAR typedef SBYTE
  CSHORT typedef SWORD
  CLONG typedef DWORD
  PCCHAR typedef ptr CCHAR
  PCSHORT typedef ptr CSHORT
  PCLONG typedef ptr CLONG
  LCID typedef DWORD
  PLCID typedef PULONG
  LANGID typedef WORD
  ifndef __COMPARTMENT_ID_DEFINED__
    __COMPARTMENT_ID_DEFINED__ equ <>
    COMPARTMENT_ID typedef SDWORD
    UNSPECIFIED_COMPARTMENT_ID = 0 
    DEFAULT_COMPARTMENT_ID = 1
    PCOMPARTMENT_ID typedef ptr COMPARTMENT_ID
  endif
  LOGICAL typedef DWORD
  PLOGICAL typedef ptr DWORD
  NTSTATUS typedef SDWORD
  PNTSTATUS typedef ptr NTSTATUS
  PCNTSTATUS typedef ptr NTSTATUS

  NT_SUCCESS macro Status
   exitm <( ( ( NTSTATUS ) ( Status ) ) >= 0 ) >
  endm

  NT_INFORMATION macro Status
   exitm <( ( ( ( Status ) ) shr 30 ) == 1 ) >
  endm

  NT_WARNING macro Status
   exitm <( ( ( ( Status ) ) shr 30 ) == 2 ) >
  endm

  NT_ERROR macro Status
   exitm <( ( ( ( Status ) ) shr 30 ) == 3 ) >
  endm

  APPLICATION_ERROR_MASK equ 20000000h
  ERROR_SEVERITY_SUCCESS equ 00000000h
  ERROR_SEVERITY_INFORMATIONAL equ 40000000h
  ERROR_SEVERITY_WARNING equ 80000000h
  ERROR_SEVERITY_ERROR equ 0C0000000h
  ifndef __SECSTATUS_DEFINED__
    SECURITY_STATUS typedef SDWORD
    __SECSTATUS_DEFINED__ equ <>
  endif
  
    LARGE_INTEGER UNION
      struct
        LowPart    DWORD ?
        HighPart   DWORD ?
      ends
      struct u
        LowPart    DWORD ?
        HighPart   DWORD ?
      ends
      QuadPart     QWORD ?
    LARGE_INTEGER ENDS
    PLARGE_INTEGER typedef PTR LARGE_INTEGER

    ULARGE_INTEGER UNION
      struct
        LowPart    DWORD ?
        HighPart   DWORD ?
      ends
      struct u
        LowPart    DWORD ?
        HighPart   DWORD ?
      ends
      QuadPart     QWORD ?
    ULARGE_INTEGER ENDS
    PULARGE_INTEGER	typedef	PTR ULARGE_INTEGER  
  
  TIME equ <LARGE_INTEGER>
  _TIME equ <_LARGE_INTEGER>
  PTIME equ <PLARGE_INTEGER>
  LowTime equ <LowPart>
  HighTime equ <HighPart>

  FLOAT128 struct
    LowPart QWORD ?
    HighPart QWORD ?
  FLOAT128 ends

  PFLOAT128 typedef ptr FLOAT128
  
  SIZE_T typedef QWORD
  PSIZE_T typedef PTR QWORD
  LONGLONG typedef QWORD
  ULONGLONG typedef QWORD
  MAXLONGLONG equ 7fffffffffffffffh

  PLONGLONG typedef ptr QWORD
  PULONGLONG typedef ptr QWORD
  LONG_PTR typedef ptr QWORD
  ULONG_PTR typedef ptr QWORD
  ULONG64 typedef QWORD
  USN typedef QWORD

  PULARGE_INTEGER typedef ptr ULARGE_INTEGER
  RTL_REFERENCE_COUNT typedef LONG_PTR
  PRTL_REFERENCE_COUNT typedef ptr LONG_PTR
  RTL_REFERENCE_COUNT32 typedef SDWORD
  PRTL_REFERENCE_COUNT32 typedef ptr SDWORD
  LUID struct
    LowPart DWORD ?
    HighPart SDWORD ?
  LUID ends

  PLUID typedef ptr LUID
  
  _DWORDLONG_ equ <>
  DWORDLONG typedef QWORD
  PDWORDLONG typedef ptr QWORD
  PHYSICAL_ADDRESS typedef LARGE_INTEGER
  PPHYSICAL_ADDRESS typedef ptr LARGE_INTEGER

  EVENT_TYPE typedef SDWORD
  NotificationEvent = 0
  SynchronizationEvent = 1
  
  TIMER_TYPE typedef SDWORD
  NotificationTimer = 0
  SynchronizationTimer = 1
  
  WAIT_TYPE typedef SDWORD
  WaitAll = 0
  WaitAny = 1
  WaitNotification = 2
  WaitDequeue = 3
  
  PSZ typedef ptr CHAR
  PCSZ typedef ptr SBYTE
  RTL_STRING_LENGTH_TYPE typedef WORD
  STRING struct
    Length_ WORD ?
    MaximumLength WORD ?
    Buffer QWORD ? ; PCHAR size_is(MaximumLength),length_is(Length) dup (?)
  STRING ends

  PSTRING_ typedef ptr STRING
  ANSI_STRING typedef STRING
  PANSI_STRING typedef PSTRING_
  OEM_STRING typedef STRING
  POEM_STRING typedef PSTRING_
  PCOEM_STRING typedef ptr STRING
  CSTRING struct
    Length_ WORD ?
    MaximumLength WORD ?
    Buffer POINTER ?
  CSTRING ends

  PCSTRING typedef ptr CSTRING
  ANSI_NULL equ 0
  CANSI_STRING typedef STRING
  PCANSI_STRING typedef PSTRING_
  UNICODE_STRING struct
    Length_ WORD ?
    MaximumLength WORD ?
    Buffer POINTER ? ;size_is(MaximumLength/2),length_is((Length)/2) dup (?)
    ;Buffer PWCH ?
  UNICODE_STRING ends

  PUNICODE_STRING typedef ptr UNICODE_STRING
  PCUNICODE_STRING typedef ptr UNICODE_STRING
  UNICODE_NULL equ 0

    UNICODE_STRING_MAX_BYTES equ 65534
    UNICODE_STRING_MAX_CHARS equ 32767
    DECLARE_CONST_UNICODE_STRING macro _var,_string
     exitm <const WCHAR _var ## _buffer [ ] = _string >
    endm
    DECLARE_GLOBAL_CONST_UNICODE_STRING macro _var,_str
     exitm <extern const __declspec ( selectany ) UNICODE_STRING _var = RTL_CONSTANT_STRING ( _str ) >
    endm
    DECLARE_UNICODE_STRING_SIZE macro _var,_size
     exitm <WCHAR _var ## _buffer [ _size ] >
    endm

  BOOL typedef BYTE
  BOOLEAN typedef BYTE
  PBOOLEAN typedef ptr BOOLEAN
  LIST_ENTRY struct
    Flink POINTER ?
    Blink POINTER ?
  LIST_ENTRY ends

  PLIST_ENTRY typedef ptr LIST_ENTRY
  PRLIST_ENTRY typedef ptr LIST_ENTRY
  
  SINGLE_LIST_ENTRY struct
    Next POINTER ?
  SINGLE_LIST_ENTRY ends

  PSINGLE_LIST_ENTRY typedef ptr SINGLE_LIST_ENTRY

  LIST_ENTRY32 struct
    Flink DWORD ?
    Blink DWORD ?
  LIST_ENTRY32 ends

  PLIST_ENTRY32 typedef ptr LIST_ENTRY32
  LIST_ENTRY64 struct
    Flink QWORD ?
    Blink QWORD ?
  LIST_ENTRY64 ends

  PLIST_ENTRY64 typedef ptr LIST_ENTRY64
  SINGLE_LIST_ENTRY32 struct
    Next DWORD ?
  SINGLE_LIST_ENTRY32 ends

  PSINGLE_LIST_ENTRY32 typedef ptr SINGLE_LIST_ENTRY32
  
  ifndef _DEFINED__WNF_STATE_NAME
    _DEFINED__WNF_STATE_NAME equ <>
    WNF_STATE_NAME struct
      Data DWORD 2 dup (?)
    WNF_STATE_NAME ends

    PWNF_STATE_NAME typedef ptr _WNF_STATE_NAME
    PCWNF_STATE_NAME typedef ptr _WNF_STATE_NAME
  endif
  
  STRING32 struct
    Length_ WORD ?
    MaximumLength WORD ?
    Buffer DWORD ?
  STRING32 ends

  PSTRING32 typedef ptr STRING32
  UNICODE_STRING32 typedef STRING32
  PUNICODE_STRING32 typedef ptr UNICODE_STRING32
  ANSI_STRING32 typedef STRING32
  PANSI_STRING32 typedef ptr ANSI_STRING32
  STRING64 struct
    Length_ WORD ?
    MaximumLength WORD ?
    Buffer QWORD ?
  STRING64 ends

  PSTRING64 typedef ptr STRING64
  UNICODE_STRING64 typedef STRING64
  PUNICODE_STRING64 typedef ptr UNICODE_STRING64
  ANSI_STRING64 typedef STRING64
  PANSI_STRING64 typedef ptr ANSI_STRING64
  OBJ_INHERIT equ 00000002h
  OBJ_PERMANENT equ 00000010h
  OBJ_EXCLUSIVE equ 00000020h
  OBJ_CASE_INSENSITIVE equ 00000040h
  OBJ_OPENIF equ 00000080h
  OBJ_OPENLINK equ 00000100h
  OBJ_KERNEL_HANDLE equ 00000200h
  OBJ_FORCE_ACCESS_CHECK equ 00000400h
  OBJ_IGNORE_IMPERSONATED_DEVICEMAP equ 00000800h
  OBJ_DONT_REPARSE equ 00001000h
  OBJ_VALID_ATTRIBUTES equ 00001FF2h
  OBJECT_ATTRIBUTES64 struct
    Length_ DWORD ?
    RootDirectory ULONG64 ?
    ObjectName ULONG64 ?
    Attributes DWORD ?
    SecurityDescriptor ULONG64 ?
    SecurityQualityOfService ULONG64 ?
  OBJECT_ATTRIBUTES64 ends

  POBJECT_ATTRIBUTES64 typedef ptr OBJECT_ATTRIBUTES64
  PCOBJECT_ATTRIBUTES64 typedef ptr OBJECT_ATTRIBUTES64
  OBJECT_ATTRIBUTES32 struct
    Length_ DWORD ?
    RootDirectory DWORD ?
    ObjectName DWORD ?
    Attributes DWORD ?
    SecurityDescriptor DWORD ?
    SecurityQualityOfService DWORD ?
  OBJECT_ATTRIBUTES32 ends

  POBJECT_ATTRIBUTES32 typedef ptr OBJECT_ATTRIBUTES32
  PCOBJECT_ATTRIBUTES32 typedef ptr OBJECT_ATTRIBUTES32
  OBJECT_ATTRIBUTES struct
    Length_ DWORD ?
    RootDirectory HANDLE ?
    ObjectName PUNICODE_STRING ?
    Attributes DWORD ?
    SecurityDescriptor PVOID ?
    SecurityQualityOfService PVOID ?
  OBJECT_ATTRIBUTES ends

  POBJECT_ATTRIBUTES typedef ptr OBJECT_ATTRIBUTES
  PCOBJECT_ATTRIBUTES typedef ptr OBJECT_ATTRIBUTES

  NULL64 equ 0

    IFNDEF GUID
    GUID STRUCT
       Data1   DWORD   ?
       Data2   WORD   ?
       Data3   WORD   ?
       Data4   BYTE 8 dup(?)
    GUID ENDS
    PGUID typedef ptr GUID
    ENDIF
    
    IFNDEF GUID_DEFINED
    DEFINE_GUID MACRO name_:REQ, l:REQ, w1:REQ, w2:REQ, b1:REQ, b2:REQ, b3:REQ, b4:REQ, b5:REQ, b6:REQ, b7:REQ, b8:REQ
        ;local segn
       ;segn TEXTEQU @CurSeg
       .const
          ALIGN 4
          name_ dd l
                dw w1
                dw w2
                db b1
                db b2
                db b3
                db b4
                db b5
                db b6
                db b7
                db b8
       @CurSeg ENDS
       ;segn SEGMENT
    ENDM
    ENDIF ; GUID_DEFINED

  ifndef __OBJECTID_DEFINED
    __OBJECTID_DEFINED equ <>
    OBJECTID struct
      Lineage GUID <0,0,0,0>
      Uniquifier DWORD ?
    OBJECTID ends
  endif
  MINCHAR equ 80h
  MAXCHAR equ 7fh
  MINSHORT equ 8000h
  MAXSHORT equ 7fffh
  MINLONG equ 80000000h
  MAXLONG equ 7fffffffh
  MAXUCHAR equ 0ffh
  MAXUSHORT equ 0ffffh
  MAXULONG equ 0ffffffffh

  EXCEPTION_ROUTINE typedef proto stdcall :ptr _EXCEPTION_RECORD,:PVOID,:ptr _CONTEXT,:PVOID
  PEXCEPTION_ROUTINE typedef ptr EXCEPTION_ROUTINE
  KIRQL typedef BYTE
  PKIRQL typedef ptr KIRQL
  NT_PRODUCT_TYPE typedef SDWORD
  NtProductWinNt = 1 
  NtProductLanManNt = 2
  NtProductServer = 3
  
  PNT_PRODUCT_TYPE typedef ptr NT_PRODUCT_TYPE
  
  SUITE_TYPE typedef SDWORD
  SmallBusiness = 0
  Enterprise = 1
  BackOffice = 2
  CommunicationServer = 3
  TerminalServer = 4
  SmallBusinessRestricted = 5
  EmbeddedNT = 6
  DataCenter = 7
  SingleUserTS = 8
  Personal = 9
  Blade = 10
  EmbeddedRestricted = 11
  SecurityAppliance = 12
  StorageServer = 13
  ComputeServer = 14
  WHServer = 15
  PhoneNT = 16
  MultiUserTS = 17
  MaxSuiteType = 18
  
  VER_SERVER_NT equ 80000000h
  VER_WORKSTATION_NT equ 40000000h
  VER_SUITE_SMALLBUSINESS equ 00000001h
  VER_SUITE_ENTERPRISE equ 00000002h
  VER_SUITE_BACKOFFICE equ 00000004h
  VER_SUITE_COMMUNICATIONS equ 00000008h
  VER_SUITE_TERMINAL equ 00000010h
  VER_SUITE_SMALLBUSINESS_RESTRICTED equ 00000020h
  VER_SUITE_EMBEDDEDNT equ 00000040h
  VER_SUITE_DATACENTER equ 00000080h
  VER_SUITE_SINGLEUSERTS equ 00000100h
  VER_SUITE_PERSONAL equ 00000200h
  VER_SUITE_BLADE equ 00000400h
  VER_SUITE_EMBEDDED_RESTRICTED equ 00000800h
  VER_SUITE_SECURITY_APPLIANCE equ 00001000h
  VER_SUITE_STORAGE_SERVER equ 00002000h
  VER_SUITE_COMPUTE_SERVER equ 00004000h
  VER_SUITE_WH_SERVER equ 00008000h
  VER_SUITE_MULTIUSERTS equ 00020000h
  PRODUCT_UNDEFINED equ 00000000h
  PRODUCT_ULTIMATE equ 00000001h
  PRODUCT_HOME_BASIC equ 00000002h
  PRODUCT_HOME_PREMIUM equ 00000003h
  PRODUCT_ENTERPRISE equ 00000004h
  PRODUCT_HOME_BASIC_N equ 00000005h
  PRODUCT_BUSINESS equ 00000006h
  PRODUCT_STANDARD_SERVER equ 00000007h
  PRODUCT_DATACENTER_SERVER equ 00000008h
  PRODUCT_SMALLBUSINESS_SERVER equ 00000009h
  PRODUCT_ENTERPRISE_SERVER equ 0000000Ah
  PRODUCT_STARTER equ 0000000Bh
  PRODUCT_DATACENTER_SERVER_CORE equ 0000000Ch
  PRODUCT_STANDARD_SERVER_CORE equ 0000000Dh
  PRODUCT_ENTERPRISE_SERVER_CORE equ 0000000Eh
  PRODUCT_ENTERPRISE_SERVER_IA64 equ 0000000Fh
  PRODUCT_BUSINESS_N equ 00000010h
  PRODUCT_WEB_SERVER equ 00000011h
  PRODUCT_CLUSTER_SERVER equ 00000012h
  PRODUCT_HOME_SERVER equ 00000013h
  PRODUCT_STORAGE_EXPRESS_SERVER equ 00000014h
  PRODUCT_STORAGE_STANDARD_SERVER equ 00000015h
  PRODUCT_STORAGE_WORKGROUP_SERVER equ 00000016h
  PRODUCT_STORAGE_ENTERPRISE_SERVER equ 00000017h
  PRODUCT_SERVER_FOR_SMALLBUSINESS equ 00000018h
  PRODUCT_SMALLBUSINESS_SERVER_PREMIUM equ 00000019h
  PRODUCT_HOME_PREMIUM_N equ 0000001Ah
  PRODUCT_ENTERPRISE_N equ 0000001Bh
  PRODUCT_ULTIMATE_N equ 0000001Ch
  PRODUCT_WEB_SERVER_CORE equ 0000001Dh
  PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT equ 0000001Eh
  PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY equ 0000001Fh
  PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING equ 00000020h
  PRODUCT_SERVER_FOUNDATION equ 00000021h
  PRODUCT_HOME_PREMIUM_SERVER equ 00000022h
  PRODUCT_SERVER_FOR_SMALLBUSINESS_V equ 00000023h
  PRODUCT_STANDARD_SERVER_V equ 00000024h
  PRODUCT_DATACENTER_SERVER_V equ 00000025h
  PRODUCT_ENTERPRISE_SERVER_V equ 00000026h
  PRODUCT_DATACENTER_SERVER_CORE_V equ 00000027h
  PRODUCT_STANDARD_SERVER_CORE_V equ 00000028h
  PRODUCT_ENTERPRISE_SERVER_CORE_V equ 00000029h
  PRODUCT_HYPERV equ 0000002Ah
  PRODUCT_STORAGE_EXPRESS_SERVER_CORE equ 0000002Bh
  PRODUCT_STORAGE_STANDARD_SERVER_CORE equ 0000002Ch
  PRODUCT_STORAGE_WORKGROUP_SERVER_CORE equ 0000002Dh
  PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE equ 0000002Eh
  PRODUCT_STARTER_N equ 0000002Fh
  PRODUCT_PROFESSIONAL equ 00000030h
  PRODUCT_PROFESSIONAL_N equ 00000031h
  PRODUCT_SB_SOLUTION_SERVER equ 00000032h
  PRODUCT_SERVER_FOR_SB_SOLUTIONS equ 00000033h
  PRODUCT_STANDARD_SERVER_SOLUTIONS equ 00000034h
  PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE equ 00000035h
  PRODUCT_SB_SOLUTION_SERVER_EM equ 00000036h
  PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM equ 00000037h
  PRODUCT_SOLUTION_EMBEDDEDSERVER equ 00000038h
  PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE equ 00000039h
  PRODUCT_PROFESSIONAL_EMBEDDED equ 0000003Ah
  PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT equ 0000003Bh
  PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL equ 0000003Ch
  PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC equ 0000003Dh
  PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC equ 0000003Eh
  PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE equ 0000003Fh
  PRODUCT_CLUSTER_SERVER_V equ 00000040h
  PRODUCT_EMBEDDED equ 00000041h
  PRODUCT_STARTER_E equ 00000042h
  PRODUCT_HOME_BASIC_E equ 00000043h
  PRODUCT_HOME_PREMIUM_E equ 00000044h
  PRODUCT_PROFESSIONAL_E equ 00000045h
  PRODUCT_ENTERPRISE_E equ 00000046h
  PRODUCT_ULTIMATE_E equ 00000047h
  PRODUCT_ENTERPRISE_EVALUATION equ 00000048h
  PRODUCT_MULTIPOINT_STANDARD_SERVER equ 0000004Ch
  PRODUCT_MULTIPOINT_PREMIUM_SERVER equ 0000004Dh
  PRODUCT_STANDARD_EVALUATION_SERVER equ 0000004Fh
  PRODUCT_DATACENTER_EVALUATION_SERVER equ 00000050h
  PRODUCT_ENTERPRISE_N_EVALUATION equ 00000054h
  PRODUCT_EMBEDDED_AUTOMOTIVE equ 00000055h
  PRODUCT_EMBEDDED_INDUSTRY_A equ 00000056h
  PRODUCT_THINPC equ 00000057h
  PRODUCT_EMBEDDED_A equ 00000058h
  PRODUCT_EMBEDDED_INDUSTRY equ 00000059h
  PRODUCT_EMBEDDED_E equ 0000005Ah
  PRODUCT_EMBEDDED_INDUSTRY_E equ 0000005Bh
  PRODUCT_EMBEDDED_INDUSTRY_A_E equ 0000005Ch
  PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER equ 0000005Fh
  PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER equ 00000060h
  PRODUCT_CORE_ARM equ 00000061h
  PRODUCT_CORE_N equ 00000062h
  PRODUCT_CORE_COUNTRYSPECIFIC equ 00000063h
  PRODUCT_CORE_SINGLELANGUAGE equ 00000064h
  PRODUCT_CORE equ 00000065h
  PRODUCT_PROFESSIONAL_WMC equ 00000067h
  PRODUCT_EMBEDDED_INDUSTRY_EVAL equ 00000069h
  PRODUCT_EMBEDDED_INDUSTRY_E_EVAL equ 0000006Ah
  PRODUCT_EMBEDDED_EVAL equ 0000006Bh
  PRODUCT_EMBEDDED_E_EVAL equ 0000006Ch
  PRODUCT_NANO_SERVER equ 0000006Dh
  PRODUCT_CLOUD_STORAGE_SERVER equ 0000006Eh
  PRODUCT_CORE_CONNECTED equ 0000006Fh
  PRODUCT_PROFESSIONAL_STUDENT equ 00000070h
  PRODUCT_CORE_CONNECTED_N equ 00000071h
  PRODUCT_PROFESSIONAL_STUDENT_N equ 00000072h
  PRODUCT_CORE_CONNECTED_SINGLELANGUAGE equ 00000073h
  PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC equ 00000074h
  PRODUCT_CONNECTED_CAR equ 00000075h
  PRODUCT_INDUSTRY_HANDHELD equ 00000076h
  PRODUCT_PPI_PRO equ 00000077h
  PRODUCT_ARM64_SERVER equ 00000078h
  PRODUCT_EDUCATION equ 00000079h
  PRODUCT_EDUCATION_N equ 0000007Ah
  PRODUCT_IOTUAP equ 0000007Bh
  PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER equ 0000007Ch
  PRODUCT_ENTERPRISE_S equ 0000007Dh
  PRODUCT_ENTERPRISE_S_N equ 0000007Eh
  PRODUCT_PROFESSIONAL_S equ 0000007Fh
  PRODUCT_PROFESSIONAL_S_N equ 00000080h
  PRODUCT_ENTERPRISE_S_EVALUATION equ 00000081h
  PRODUCT_ENTERPRISE_S_N_EVALUATION equ 00000082h
  PRODUCT_HOLOGRAPHIC equ 00000087h
  PRODUCT_PRO_SINGLE_LANGUAGE equ 0000008Ah
  PRODUCT_PRO_CHINA equ 0000008Bh
  PRODUCT_ENTERPRISE_SUBSCRIPTION equ 0000008Ch
  PRODUCT_ENTERPRISE_SUBSCRIPTION_N equ 0000008Dh
  PRODUCT_DATACENTER_NANO_SERVER equ 0000008Fh
  PRODUCT_STANDARD_NANO_SERVER equ 00000090h
  PRODUCT_DATACENTER_A_SERVER_CORE equ 00000091h
  PRODUCT_STANDARD_A_SERVER_CORE equ 00000092h
  PRODUCT_DATACENTER_WS_SERVER_CORE equ 00000093h
  PRODUCT_STANDARD_WS_SERVER_CORE equ 00000094h
  PRODUCT_UTILITY_VM equ 00000095h
  PRODUCT_DATACENTER_EVALUATION_SERVER_CORE equ 0000009Fh
  PRODUCT_STANDARD_EVALUATION_SERVER_CORE equ 000000A0h
  PRODUCT_PRO_WORKSTATION equ 000000A1h
  PRODUCT_PRO_WORKSTATION_N equ 000000A2h
  PRODUCT_PRO_FOR_EDUCATION equ 000000A4h
  PRODUCT_PRO_FOR_EDUCATION_N equ 000000A5h
  PRODUCT_AZURE_SERVER_CORE equ 000000A8h
  PRODUCT_AZURE_NANO_SERVER equ 000000A9h
  PRODUCT_ENTERPRISEG equ 000000ABh
  PRODUCT_ENTERPRISEGN equ 000000ACh
  PRODUCT_SERVERRDSH equ 000000AFh
  PRODUCT_CLOUD equ 000000B2h
  PRODUCT_CLOUDN equ 000000B3h
  PRODUCT_HUBOS equ 000000B4h
  PRODUCT_ONECOREUPDATEOS equ 000000B6h
  PRODUCT_ANDROMEDA equ 000000B8h
  PRODUCT_UNLICENSED equ 0ABCDABCDh

  LANG_NEUTRAL equ 00h
  LANG_INVARIANT equ 7fh
  LANG_AFRIKAANS equ 36h
  LANG_ALBANIAN equ 1ch
  LANG_ALSATIAN equ 84h
  LANG_AMHARIC equ 5eh
  LANG_ARABIC equ 01h
  LANG_ARMENIAN equ 2bh
  LANG_ASSAMESE equ 4dh
  LANG_AZERI equ 2ch
  LANG_AZERBAIJANI equ 2ch
  LANG_BANGLA equ 45h
  LANG_BASHKIR equ 6dh
  LANG_BASQUE equ 2dh
  LANG_BELARUSIAN equ 23h
  LANG_BENGALI equ 45h
  LANG_BRETON equ 7eh
  LANG_BOSNIAN equ 1ah
  LANG_BOSNIAN_NEUTRAL equ 781ah
  LANG_BULGARIAN equ 02h
  LANG_CATALAN equ 03h
  LANG_CENTRAL_KURDISH equ 92h
  LANG_CHEROKEE equ 5ch
  LANG_CHINESE equ 04h
  LANG_CHINESE_SIMPLIFIED equ 04h
  LANG_CHINESE_TRADITIONAL equ 7c04h
  LANG_CORSICAN equ 83h
  LANG_CROATIAN equ 1ah
  LANG_CZECH equ 05h
  LANG_DANISH equ 06h
  LANG_DARI equ 8ch
  LANG_DIVEHI equ 65h
  LANG_DUTCH equ 13h
  LANG_ENGLISH equ 09h
  LANG_ESTONIAN equ 25h
  LANG_FAEROESE equ 38h
  LANG_FARSI equ 29h
  LANG_FILIPINO equ 64h
  LANG_FINNISH equ 0bh
  LANG_FRENCH equ 0ch
  LANG_FRISIAN equ 62h
  LANG_FULAH equ 67h
  LANG_GALICIAN equ 56h
  LANG_GEORGIAN equ 37h
  LANG_GERMAN equ 07h
  LANG_GREEK equ 08h
  LANG_GREENLANDIC equ 6fh
  LANG_GUJARATI equ 47h
  LANG_HAUSA equ 68h
  LANG_HAWAIIAN equ 75h
  LANG_HEBREW equ 0dh
  LANG_HINDI equ 39h
  LANG_HUNGARIAN equ 0eh
  LANG_ICELANDIC equ 0fh
  LANG_IGBO equ 70h
  LANG_INDONESIAN equ 21h
  LANG_INUKTITUT equ 5dh
  LANG_IRISH equ 3ch
  LANG_ITALIAN equ 10h
  LANG_JAPANESE equ 11h
  LANG_KANNADA equ 4bh
  LANG_KASHMIRI equ 60h
  LANG_KAZAK equ 3fh
  LANG_KHMER equ 53h
  LANG_KICHE equ 86h
  LANG_KINYARWANDA equ 87h
  LANG_KONKANI equ 57h
  LANG_KOREAN equ 12h
  LANG_KYRGYZ equ 40h
  LANG_LAO equ 54h
  LANG_LATVIAN equ 26h
  LANG_LITHUANIAN equ 27h
  LANG_LOWER_SORBIAN equ 2eh
  LANG_LUXEMBOURGISH equ 6eh
  LANG_MACEDONIAN equ 2fh
  LANG_MALAY equ 3eh
  LANG_MALAYALAM equ 4ch
  LANG_MALTESE equ 3ah
  LANG_MANIPURI equ 58h
  LANG_MAORI equ 81h
  LANG_MAPUDUNGUN equ 7ah
  LANG_MARATHI equ 4eh
  LANG_MOHAWK equ 7ch
  LANG_MONGOLIAN equ 50h
  LANG_NEPALI equ 61h
  LANG_NORWEGIAN equ 14h
  LANG_OCCITAN equ 82h
  LANG_ODIA equ 48h
  LANG_ORIYA equ 48h
  LANG_PASHTO equ 63h
  LANG_PERSIAN equ 29h
  LANG_POLISH equ 15h
  LANG_PORTUGUESE equ 16h
  LANG_PULAR equ 67h
  LANG_PUNJABI equ 46h
  LANG_QUECHUA equ 6bh
  LANG_ROMANIAN equ 18h
  LANG_ROMANSH equ 17h
  LANG_RUSSIAN equ 19h
  LANG_SAKHA equ 85h
  LANG_SAMI equ 3bh
  LANG_SANSKRIT equ 4fh
  LANG_SCOTTISH_GAELIC equ 91h
  LANG_SERBIAN equ 1ah
  LANG_SERBIAN_NEUTRAL equ 7c1ah
  LANG_SINDHI equ 59h
  LANG_SINHALESE equ 5bh
  LANG_SLOVAK equ 1bh
  LANG_SLOVENIAN equ 24h
  LANG_SOTHO equ 6ch
  LANG_SPANISH equ 0ah
  LANG_SWAHILI equ 41h
  LANG_SWEDISH equ 1dh
  LANG_SYRIAC equ 5ah
  LANG_TAJIK equ 28h
  LANG_TAMAZIGHT equ 5fh
  LANG_TAMIL equ 49h
  LANG_TATAR equ 44h
  LANG_TELUGU equ 4ah
  LANG_THAI equ 1eh
  LANG_TIBETAN equ 51h
  LANG_TIGRIGNA equ 73h
  LANG_TIGRINYA equ 73h
  LANG_TSWANA equ 32h
  LANG_TURKISH equ 1fh
  LANG_TURKMEN equ 42h
  LANG_UIGHUR equ 80h
  LANG_UKRAINIAN equ 22h
  LANG_UPPER_SORBIAN equ 2eh
  LANG_URDU equ 20h
  LANG_UZBEK equ 43h
  LANG_VALENCIAN equ 03h
  LANG_VIETNAMESE equ 2ah
  LANG_WELSH equ 52h
  LANG_WOLOF equ 88h
  LANG_XHOSA equ 34h
  LANG_YAKUT equ 85h
  LANG_YI equ 78h
  LANG_YORUBA equ 6ah
  LANG_ZULU equ 35h
  SUBLANG_NEUTRAL equ 00h
  SUBLANG_DEFAULT equ 01h
  SUBLANG_SYS_DEFAULT equ 02h
  SUBLANG_CUSTOM_DEFAULT equ 03h
  SUBLANG_CUSTOM_UNSPECIFIED equ 04h
  SUBLANG_UI_CUSTOM_DEFAULT equ 05h
  SUBLANG_AFRIKAANS_SOUTH_AFRICA equ 01h
  SUBLANG_ALBANIAN_ALBANIA equ 01h
  SUBLANG_ALSATIAN_FRANCE equ 01h
  SUBLANG_AMHARIC_ETHIOPIA equ 01h
  SUBLANG_ARABIC_SAUDI_ARABIA equ 01h
  SUBLANG_ARABIC_IRAQ equ 02h
  SUBLANG_ARABIC_EGYPT equ 03h
  SUBLANG_ARABIC_LIBYA equ 04h
  SUBLANG_ARABIC_ALGERIA equ 05h
  SUBLANG_ARABIC_MOROCCO equ 06h
  SUBLANG_ARABIC_TUNISIA equ 07h
  SUBLANG_ARABIC_OMAN equ 08h
  SUBLANG_ARABIC_YEMEN equ 09h
  SUBLANG_ARABIC_SYRIA equ 0ah
  SUBLANG_ARABIC_JORDAN equ 0bh
  SUBLANG_ARABIC_LEBANON equ 0ch
  SUBLANG_ARABIC_KUWAIT equ 0dh
  SUBLANG_ARABIC_UAE equ 0eh
  SUBLANG_ARABIC_BAHRAIN equ 0fh
  SUBLANG_ARABIC_QATAR equ 10h
  SUBLANG_ARMENIAN_ARMENIA equ 01h
  SUBLANG_ASSAMESE_INDIA equ 01h
  SUBLANG_AZERI_LATIN equ 01h
  SUBLANG_AZERI_CYRILLIC equ 02h
  SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN equ 01h
  SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC equ 02h
  SUBLANG_BANGLA_INDIA equ 01h
  SUBLANG_BANGLA_BANGLADESH equ 02h
  SUBLANG_BASHKIR_RUSSIA equ 01h
  SUBLANG_BASQUE_BASQUE equ 01h
  SUBLANG_BELARUSIAN_BELARUS equ 01h
  SUBLANG_BENGALI_INDIA equ 01h
  SUBLANG_BENGALI_BANGLADESH equ 02h
  SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN equ 05h
  SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC equ 08h
  SUBLANG_BRETON_FRANCE equ 01h
  SUBLANG_BULGARIAN_BULGARIA equ 01h
  SUBLANG_CATALAN_CATALAN equ 01h
  SUBLANG_CENTRAL_KURDISH_IRAQ equ 01h
  SUBLANG_CHEROKEE_CHEROKEE equ 01h
  SUBLANG_CHINESE_TRADITIONAL equ 01h
  SUBLANG_CHINESE_SIMPLIFIED equ 02h
  SUBLANG_CHINESE_HONGKONG equ 03h
  SUBLANG_CHINESE_SINGAPORE equ 04h
  SUBLANG_CHINESE_MACAU equ 05h
  SUBLANG_CORSICAN_FRANCE equ 01h
  SUBLANG_CZECH_CZECH_REPUBLIC equ 01h
  SUBLANG_CROATIAN_CROATIA equ 01h
  SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN equ 04h
  SUBLANG_DANISH_DENMARK equ 01h
  SUBLANG_DARI_AFGHANISTAN equ 01h
  SUBLANG_DIVEHI_MALDIVES equ 01h
  SUBLANG_DUTCH equ 01h
  SUBLANG_DUTCH_BELGIAN equ 02h
  SUBLANG_ENGLISH_US equ 01h
  SUBLANG_ENGLISH_UK equ 02h
  SUBLANG_ENGLISH_AUS equ 03h
  SUBLANG_ENGLISH_CAN equ 04h
  SUBLANG_ENGLISH_NZ equ 05h
  SUBLANG_ENGLISH_EIRE equ 06h
  SUBLANG_ENGLISH_SOUTH_AFRICA equ 07h
  SUBLANG_ENGLISH_JAMAICA equ 08h
  SUBLANG_ENGLISH_CARIBBEAN equ 09h
  SUBLANG_ENGLISH_BELIZE equ 0ah
  SUBLANG_ENGLISH_TRINIDAD equ 0bh
  SUBLANG_ENGLISH_ZIMBABWE equ 0ch
  SUBLANG_ENGLISH_PHILIPPINES equ 0dh
  SUBLANG_ENGLISH_INDIA equ 10h
  SUBLANG_ENGLISH_MALAYSIA equ 11h
  SUBLANG_ENGLISH_SINGAPORE equ 12h
  SUBLANG_ESTONIAN_ESTONIA equ 01h
  SUBLANG_FAEROESE_FAROE_ISLANDS equ 01h
  SUBLANG_FILIPINO_PHILIPPINES equ 01h
  SUBLANG_FINNISH_FINLAND equ 01h
  SUBLANG_FRENCH equ 01h
  SUBLANG_FRENCH_BELGIAN equ 02h
  SUBLANG_FRENCH_CANADIAN equ 03h
  SUBLANG_FRENCH_SWISS equ 04h
  SUBLANG_FRENCH_LUXEMBOURG equ 05h
  SUBLANG_FRENCH_MONACO equ 06h
  SUBLANG_FRISIAN_NETHERLANDS equ 01h
  SUBLANG_FULAH_SENEGAL equ 02h
  SUBLANG_GALICIAN_GALICIAN equ 01h
  SUBLANG_GEORGIAN_GEORGIA equ 01h
  SUBLANG_GERMAN equ 01h
  SUBLANG_GERMAN_SWISS equ 02h
  SUBLANG_GERMAN_AUSTRIAN equ 03h
  SUBLANG_GERMAN_LUXEMBOURG equ 04h
  SUBLANG_GERMAN_LIECHTENSTEIN equ 05h
  SUBLANG_GREEK_GREECE equ 01h
  SUBLANG_GREENLANDIC_GREENLAND equ 01h
  SUBLANG_GUJARATI_INDIA equ 01h
  SUBLANG_HAUSA_NIGERIA_LATIN equ 01h
  SUBLANG_HAWAIIAN_US equ 01h
  SUBLANG_HEBREW_ISRAEL equ 01h
  SUBLANG_HINDI_INDIA equ 01h
  SUBLANG_HUNGARIAN_HUNGARY equ 01h
  SUBLANG_ICELANDIC_ICELAND equ 01h
  SUBLANG_IGBO_NIGERIA equ 01h
  SUBLANG_INDONESIAN_INDONESIA equ 01h
  SUBLANG_INUKTITUT_CANADA equ 01h
  SUBLANG_INUKTITUT_CANADA_LATIN equ 02h
  SUBLANG_IRISH_IRELAND equ 02h
  SUBLANG_ITALIAN equ 01h
  SUBLANG_ITALIAN_SWISS equ 02h
  SUBLANG_JAPANESE_JAPAN equ 01h
  SUBLANG_KANNADA_INDIA equ 01h
  SUBLANG_KASHMIRI_SASIA equ 02h
  SUBLANG_KASHMIRI_INDIA equ 02h
  SUBLANG_KAZAK_KAZAKHSTAN equ 01h
  SUBLANG_KHMER_CAMBODIA equ 01h
  SUBLANG_KICHE_GUATEMALA equ 01h
  SUBLANG_KINYARWANDA_RWANDA equ 01h
  SUBLANG_KONKANI_INDIA equ 01h
  SUBLANG_KOREAN equ 01h
  SUBLANG_KYRGYZ_KYRGYZSTAN equ 01h
  SUBLANG_LAO_LAO equ 01h
  SUBLANG_LATVIAN_LATVIA equ 01h
  SUBLANG_LITHUANIAN equ 01h
  SUBLANG_LOWER_SORBIAN_GERMANY equ 02h
  SUBLANG_LUXEMBOURGISH_LUXEMBOURG equ 01h
  SUBLANG_MACEDONIAN_MACEDONIA equ 01h
  SUBLANG_MALAY_MALAYSIA equ 01h
  SUBLANG_MALAY_BRUNEI_DARUSSALAM equ 02h
  SUBLANG_MALAYALAM_INDIA equ 01h
  SUBLANG_MALTESE_MALTA equ 01h
  SUBLANG_MAORI_NEW_ZEALAND equ 01h
  SUBLANG_MAPUDUNGUN_CHILE equ 01h
  SUBLANG_MARATHI_INDIA equ 01h
  SUBLANG_MOHAWK_MOHAWK equ 01h
  SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA equ 01h
  SUBLANG_MONGOLIAN_PRC equ 02h
  SUBLANG_NEPALI_INDIA equ 02h
  SUBLANG_NEPALI_NEPAL equ 01h
  SUBLANG_NORWEGIAN_BOKMAL equ 01h
  SUBLANG_NORWEGIAN_NYNORSK equ 02h
  SUBLANG_OCCITAN_FRANCE equ 01h
  SUBLANG_ODIA_INDIA equ 01h
  SUBLANG_ORIYA_INDIA equ 01h
  SUBLANG_PASHTO_AFGHANISTAN equ 01h
  SUBLANG_PERSIAN_IRAN equ 01h
  SUBLANG_POLISH_POLAND equ 01h
  SUBLANG_PORTUGUESE equ 02h
  SUBLANG_PORTUGUESE_BRAZILIAN equ 01h
  SUBLANG_PULAR_SENEGAL equ 02h
  SUBLANG_PUNJABI_INDIA equ 01h
  SUBLANG_PUNJABI_PAKISTAN equ 02h
  SUBLANG_QUECHUA_BOLIVIA equ 01h
  SUBLANG_QUECHUA_ECUADOR equ 02h
  SUBLANG_QUECHUA_PERU equ 03h
  SUBLANG_ROMANIAN_ROMANIA equ 01h
  SUBLANG_ROMANSH_SWITZERLAND equ 01h
  SUBLANG_RUSSIAN_RUSSIA equ 01h
  SUBLANG_SAKHA_RUSSIA equ 01h
  SUBLANG_SAMI_NORTHERN_NORWAY equ 01h
  SUBLANG_SAMI_NORTHERN_SWEDEN equ 02h
  SUBLANG_SAMI_NORTHERN_FINLAND equ 03h
  SUBLANG_SAMI_LULE_NORWAY equ 04h
  SUBLANG_SAMI_LULE_SWEDEN equ 05h
  SUBLANG_SAMI_SOUTHERN_NORWAY equ 06h
  SUBLANG_SAMI_SOUTHERN_SWEDEN equ 07h
  SUBLANG_SAMI_SKOLT_FINLAND equ 08h
  SUBLANG_SAMI_INARI_FINLAND equ 09h
  SUBLANG_SANSKRIT_INDIA equ 01h
  SUBLANG_SCOTTISH_GAELIC equ 01h
  SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN equ 06h
  SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC equ 07h
  SUBLANG_SERBIAN_MONTENEGRO_LATIN equ 0bh
  SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC equ 0ch
  SUBLANG_SERBIAN_SERBIA_LATIN equ 09h
  SUBLANG_SERBIAN_SERBIA_CYRILLIC equ 0ah
  SUBLANG_SERBIAN_CROATIA equ 01h
  SUBLANG_SERBIAN_LATIN equ 02h
  SUBLANG_SERBIAN_CYRILLIC equ 03h
  SUBLANG_SINDHI_INDIA equ 01h
  SUBLANG_SINDHI_PAKISTAN equ 02h
  SUBLANG_SINDHI_AFGHANISTAN equ 02h
  SUBLANG_SINHALESE_SRI_LANKA equ 01h
  SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA equ 01h
  SUBLANG_SLOVAK_SLOVAKIA equ 01h
  SUBLANG_SLOVENIAN_SLOVENIA equ 01h
  SUBLANG_SPANISH equ 01h
  SUBLANG_SPANISH_MEXICAN equ 02h
  SUBLANG_SPANISH_MODERN equ 03h
  SUBLANG_SPANISH_GUATEMALA equ 04h
  SUBLANG_SPANISH_COSTA_RICA equ 05h
  SUBLANG_SPANISH_PANAMA equ 06h
  SUBLANG_SPANISH_DOMINICAN_REPUBLIC equ 07h
  SUBLANG_SPANISH_VENEZUELA equ 08h
  SUBLANG_SPANISH_COLOMBIA equ 09h
  SUBLANG_SPANISH_PERU equ 0ah
  SUBLANG_SPANISH_ARGENTINA equ 0bh
  SUBLANG_SPANISH_ECUADOR equ 0ch
  SUBLANG_SPANISH_CHILE equ 0dh
  SUBLANG_SPANISH_URUGUAY equ 0eh
  SUBLANG_SPANISH_PARAGUAY equ 0fh
  SUBLANG_SPANISH_BOLIVIA equ 10h
  SUBLANG_SPANISH_EL_SALVADOR equ 11h
  SUBLANG_SPANISH_HONDURAS equ 12h
  SUBLANG_SPANISH_NICARAGUA equ 13h
  SUBLANG_SPANISH_PUERTO_RICO equ 14h
  SUBLANG_SPANISH_US equ 15h
  SUBLANG_SWAHILI_KENYA equ 01h
  SUBLANG_SWEDISH equ 01h
  SUBLANG_SWEDISH_FINLAND equ 02h
  SUBLANG_SYRIAC_SYRIA equ 01h
  SUBLANG_TAJIK_TAJIKISTAN equ 01h
  SUBLANG_TAMAZIGHT_ALGERIA_LATIN equ 02h
  SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH equ 04h
  SUBLANG_TAMIL_INDIA equ 01h
  SUBLANG_TAMIL_SRI_LANKA equ 02h
  SUBLANG_TATAR_RUSSIA equ 01h
  SUBLANG_TELUGU_INDIA equ 01h
  SUBLANG_THAI_THAILAND equ 01h
  SUBLANG_TIBETAN_PRC equ 01h
  SUBLANG_TIGRIGNA_ERITREA equ 02h
  SUBLANG_TIGRINYA_ERITREA equ 02h
  SUBLANG_TIGRINYA_ETHIOPIA equ 01h
  SUBLANG_TSWANA_BOTSWANA equ 02h
  SUBLANG_TSWANA_SOUTH_AFRICA equ 01h
  SUBLANG_TURKISH_TURKEY equ 01h
  SUBLANG_TURKMEN_TURKMENISTAN equ 01h
  SUBLANG_UIGHUR_PRC equ 01h
  SUBLANG_UKRAINIAN_UKRAINE equ 01h
  SUBLANG_UPPER_SORBIAN_GERMANY equ 01h
  SUBLANG_URDU_PAKISTAN equ 01h
  SUBLANG_URDU_INDIA equ 02h
  SUBLANG_UZBEK_LATIN equ 01h
  SUBLANG_UZBEK_CYRILLIC equ 02h
  SUBLANG_VALENCIAN_VALENCIA equ 02h
  SUBLANG_VIETNAMESE_VIETNAM equ 01h
  SUBLANG_WELSH_UNITED_KINGDOM equ 01h
  SUBLANG_WOLOF_SENEGAL equ 01h
  SUBLANG_XHOSA_SOUTH_AFRICA equ 01h
  SUBLANG_YAKUT_RUSSIA equ 01h
  SUBLANG_YI_PRC equ 01h
  SUBLANG_YORUBA_NIGERIA equ 01h
  SUBLANG_ZULU_SOUTH_AFRICA equ 01h
  SORT_DEFAULT equ 0h
  SORT_INVARIANT_MATH equ 1h
  SORT_JAPANESE_XJIS equ 0h
  SORT_JAPANESE_UNICODE equ 1h
  SORT_JAPANESE_RADICALSTROKE equ 4h
  SORT_CHINESE_BIG5 equ 0h
  SORT_CHINESE_PRCP equ 0h
  SORT_CHINESE_UNICODE equ 1h
  SORT_CHINESE_PRC equ 2h
  SORT_CHINESE_BOPOMOFO equ 3h
  SORT_CHINESE_RADICALSTROKE equ 4h
  SORT_KOREAN_KSC equ 0h
  SORT_KOREAN_UNICODE equ 1h
  SORT_GERMAN_PHONE_BOOK equ 1h
  SORT_HUNGARIAN_DEFAULT equ 0h
  SORT_HUNGARIAN_TECHNICAL equ 1h
  SORT_GEORGIAN_TRADITIONAL equ 0h
  SORT_GEORGIAN_MODERN equ 1h
  MAKELANGID macro p,s
   exitm <( ( ( ( s ) ) shl 10 ) or ( p ) ) >
  endm
  PRIMARYLANGID macro lgid
   exitm <( ( lgid ) and 3ffh ) >
  endm
  SUBLANGID macro lgid
   exitm <( ( lgid ) shr 10 ) >
  endm
  NLS_VALID_LOCALE_MASK equ 000fffffh
  MAKELCID macro lgid,srtid
   exitm <( ( ( ( ( ( srtid ) ) ) shl 16 ) or ( ( ( lgid ) ) ) ) ) >
  endm
  MAKESORTLCID macro lgid,srtid,ver
   exitm <( ( ( MAKELCID ( lgid , srtid ) ) or ( ( ( ( ver ) ) ) shl 20 ) ) ) >
  endm
  LANGIDFROMLCID macro lcid
   exitm <( ( lcid ) ) >
  endm
  SORTIDFROMLCID macro lcid
   exitm <( ( ( ( ( lcid ) ) shr 16 ) and 0fh ) ) >
  endm
  SORTVERSIONFROMLCID macro lcid
   exitm <( ( ( ( ( lcid ) ) shr 20 ) and 0fh ) ) >
  endm
  LOCALE_NAME_MAX_LENGTH equ 85
  LANG_SYSTEM_DEFAULT equ <( MAKELANGID ( LANG_NEUTRAL , SUBLANG_SYS_DEFAULT ) )>
  LANG_USER_DEFAULT equ <( MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) )>
  LOCALE_SYSTEM_DEFAULT equ <( MAKELCID ( LANG_SYSTEM_DEFAULT , SORT_DEFAULT ) )>
  LOCALE_USER_DEFAULT equ <( MAKELCID ( LANG_USER_DEFAULT , SORT_DEFAULT ) )>
  LOCALE_CUSTOM_DEFAULT equ <( MAKELCID ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_CUSTOM_DEFAULT ) , SORT_DEFAULT ) )>
  LOCALE_CUSTOM_UNSPECIFIED equ <( MAKELCID ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_CUSTOM_UNSPECIFIED ) , SORT_DEFAULT ) )>
  LOCALE_CUSTOM_UI_DEFAULT equ <( MAKELCID ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_UI_CUSTOM_DEFAULT ) , SORT_DEFAULT ) )>
  LOCALE_NEUTRAL equ <( MAKELCID ( MAKELANGID ( LANG_NEUTRAL , SUBLANG_NEUTRAL ) , SORT_DEFAULT ) )>
  LOCALE_INVARIANT equ <( MAKELCID ( MAKELANGID ( LANG_INVARIANT , SUBLANG_NEUTRAL ) , SORT_DEFAULT ) )>
  LOCALE_TRANSIENT_KEYBOARD1 equ 2000h
  LOCALE_TRANSIENT_KEYBOARD2 equ 2400h
  LOCALE_TRANSIENT_KEYBOARD3 equ 2800h
  LOCALE_TRANSIENT_KEYBOARD4 equ 2c00h
  LOCALE_UNASSIGNED_LCID equ <LOCALE_CUSTOM_UNSPECIFIED>

endif

;Errors: 0
 